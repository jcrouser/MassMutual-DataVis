c("s5", "s6"),
c("s1", "s3"),
#c("s2", "s4"),
c("s3", "s5"),
#c("s4","s6"),
#c("s1", "s4"),
c("s2", "s5"),
c("s3", "s6")#,
#c("s1", "s5"),
#c("s2", "s6"),
#c("s1", "s6")
)
batch_5_1 %>%
filter(num_correct > 3) %>%
gather(key = "condition", value = "value", s1:s6) %>%
select(workerId, condition, value, endpoint_labels) %>%
ggplot(aes(x = condition, y = value)) +
geom_boxplot(outlier.shape = NA) +
scale_x_discrete() +
geom_hline(aes(yintercept = 50), color = "blue", linetype="dashed", show.legend = FALSE) +
geom_jitter(position = position_jitter(width=.1, height=0)) +
stat_compare_means(comparisons = my_comparisons,
method = "t.test",
aes(label = ..p.signif..),
hide.ns = TRUE,
paired = TRUE) +
theme(axis.text.x  = my_axis(pics),
axis.title.x = element_blank()) +
ggtitle("Selecting value 5 on a scale ranging from 0 to 10")
batch_3_1 <- read_csv("~/Google Drive/Research/Ongoing Projects/Visual Perception VASs/Data Analysis/pre-label data/batch 0.1 clean.csv")
my_comparisons <- list(c("s1", "s2"),
c("s2", "s3"),
c("s3", "s4"),
c("s4","s5"),
c("s5", "s6"),
c("s1", "s3"),
c("s2", "s4"),
c("s3", "s5"),
c("s4","s6"),
c("s1", "s4"),
c("s2", "s5"),
c("s3", "s6"),
c("s1", "s5"),
c("s2", "s6"),
c("s1", "s6")
)
batch_3_1 %>%
filter(num_correct > 3) %>%
gather(key = "condition", value = "value", s1:s6) %>%
select(workerId, condition, value, endpoint_labels) %>%
ggplot(aes(x = condition, y = value)) +
geom_boxplot(outlier.shape = NA) +
scale_x_discrete() +
geom_hline(aes(yintercept = 50), color = "blue", linetype="dashed", show.legend = FALSE) +
geom_jitter(position = position_jitter(width=.1, height=0)) +
stat_compare_means(comparisons = my_comparisons,
method = "t.test",
aes(label = ..p.signif..),
hide.ns = TRUE,
paired = TRUE) +
theme(axis.text.x  = my_axis(pics),
axis.title.x = element_blank()) +
ggtitle("Selecting value 5 on a scale ranging from 0 to 10")
my_comparisons <- list(c("s1", "s2"),
c("s2", "s3"),
c("s3", "s4"),
c("s4","s5"),
c("s5", "s6"),
c("s1", "s3"),
c("s2", "s4"),
c("s3", "s5"),
c("s4","s6"),
c("s1", "s4"),
c("s2", "s5"),
c("s3", "s6"),
c("s1", "s5"),
c("s2", "s6"),
c("s1", "s6")
)
batch_3_1 %>%
filter(num_correct > 3) %>%
gather(key = "condition", value = "value", s1:s6) %>%
select(workerId, condition, value) %>%
ggplot(aes(x = condition, y = value)) +
geom_boxplot(outlier.shape = NA) +
scale_x_discrete() +
geom_hline(aes(yintercept = 50), color = "blue", linetype="dashed", show.legend = FALSE) +
geom_jitter(position = position_jitter(width=.1, height=0)) +
stat_compare_means(comparisons = my_comparisons,
method = "t.test",
aes(label = ..p.signif..),
hide.ns = TRUE,
paired = TRUE) +
theme(axis.text.x  = my_axis(pics),
axis.title.x = element_blank()) +
ggtitle("Selecting value 3 on a scale ranging from 0 to 10")
my_comparisons <- list(c("s1", "s2"),
c("s2", "s3"),
c("s3", "s4"),
c("s4","s5"),
c("s5", "s6"),
c("s1", "s3"),
c("s2", "s4"),
c("s3", "s5"),
c("s4","s6"),
c("s1", "s4"),
c("s2", "s5"),
c("s3", "s6"),
c("s1", "s5"),
c("s2", "s6"),
c("s1", "s6")
)
batch_3_1 %>%
filter(num_correct > 3) %>%
gather(key = "condition", value = "value", s1:s6) %>%
select(workerId, condition, value) %>%
ggplot(aes(x = condition, y = value)) +
geom_boxplot(outlier.shape = NA) +
scale_x_discrete() +
geom_hline(aes(yintercept = 30), color = "blue", linetype="dashed", show.legend = FALSE) +
geom_jitter(position = position_jitter(width=.1, height=0)) +
stat_compare_means(comparisons = my_comparisons,
method = "t.test",
aes(label = ..p.signif..),
hide.ns = TRUE,
paired = TRUE) +
theme(axis.text.x  = my_axis(pics),
axis.title.x = element_blank()) +
ggtitle("Selecting value 3 on a scale ranging from 0 to 10")
my_comparisons <- list(#c("s1", "s2"),
#c("s2", "s3"),
#c("s3", "s4"),
c("s4","s5"),
#c("s5", "s6"),
c("s1", "s3"),
c("s2", "s4"),
c("s3", "s5"),
c("s4","s6"),
c("s1", "s4"),
c("s2", "s5"),
c("s3", "s6"),
c("s1", "s5"),
c("s2", "s6"),
c("s1", "s6")
)
batch_3_1 %>%
filter(num_correct > 3) %>%
gather(key = "condition", value = "value", s1:s6) %>%
select(workerId, condition, value) %>%
ggplot(aes(x = condition, y = value)) +
geom_boxplot(outlier.shape = NA) +
scale_x_discrete() +
geom_hline(aes(yintercept = 30), color = "blue", linetype="dashed", show.legend = FALSE) +
geom_jitter(position = position_jitter(width=.1, height=0)) +
stat_compare_means(comparisons = my_comparisons,
method = "t.test",
aes(label = ..p.signif..),
hide.ns = TRUE,
paired = TRUE) +
theme(axis.text.x  = my_axis(pics),
axis.title.x = element_blank()) +
ggtitle("Selecting value 3 on a scale ranging from 0 to 10")
my_comparisons <- list(#c("s1", "s2"),
#c("s2", "s3"),
#c("s3", "s4"),
c("s4","s5"),
#c("s5", "s6"),
#c("s1", "s3"),
#c("s2", "s4"),
c("s3", "s5"),
c("s4","s6"),
c("s1", "s4"),
c("s2", "s5"),
c("s3", "s6"),
c("s1", "s5"),
c("s2", "s6"),
c("s1", "s6")
)
batch_3_1 %>%
filter(num_correct > 3) %>%
gather(key = "condition", value = "value", s1:s6) %>%
select(workerId, condition, value) %>%
ggplot(aes(x = condition, y = value)) +
geom_boxplot(outlier.shape = NA) +
scale_x_discrete() +
geom_hline(aes(yintercept = 30), color = "blue", linetype="dashed", show.legend = FALSE) +
geom_jitter(position = position_jitter(width=.1, height=0)) +
stat_compare_means(comparisons = my_comparisons,
method = "t.test",
aes(label = ..p.signif..),
hide.ns = TRUE,
paired = TRUE) +
theme(axis.text.x  = my_axis(pics),
axis.title.x = element_blank()) +
ggtitle("Selecting value 3 on a scale ranging from 0 to 10")
my_comparisons <- list(#c("s1", "s2"),
#c("s2", "s3"),
#c("s3", "s4"),
c("s4","s5"),
#c("s5", "s6"),
#c("s1", "s3"),
#c("s2", "s4"),
c("s3", "s5"),
c("s4","s6")#,
#c("s1", "s4"),
#c("s2", "s5"),
#c("s3", "s6"),
#c("s1", "s5"),
#c("s2", "s6"),
#c("s1", "s6")
)
batch_3_1 %>%
filter(num_correct > 3) %>%
gather(key = "condition", value = "value", s1:s6) %>%
select(workerId, condition, value) %>%
ggplot(aes(x = condition, y = value)) +
geom_boxplot(outlier.shape = NA) +
scale_x_discrete() +
geom_hline(aes(yintercept = 30), color = "blue", linetype="dashed", show.legend = FALSE) +
geom_jitter(position = position_jitter(width=.1, height=0)) +
stat_compare_means(comparisons = my_comparisons,
method = "t.test",
aes(label = ..p.signif..),
hide.ns = TRUE,
paired = TRUE) +
theme(axis.text.x  = my_axis(pics),
axis.title.x = element_blank()) +
ggtitle("Selecting value 3 on a scale ranging from 0 to 10")
batch_3_1 <- read_csv("~/Google Drive/Research/Ongoing Projects/Visual Perception VASs/Data Analysis/pre-label data/batch 0.1 clean.csv")
my_comparisons <- list(#c("s1", "s2"),
#c("s2", "s3"),
#c("s3", "s4"),
c("s4","s5"),
#c("s5", "s6"),
#c("s1", "s3"),
#c("s2", "s4"),
c("s3", "s5"),
c("s4","s6")#,
#c("s1", "s4"),
#c("s2", "s5"),
#c("s3", "s6"),
#c("s1", "s5"),
#c("s2", "s6"),
#c("s1", "s6")
)
batch_3_1 %>%
filter(num_correct > 3) %>%
gather(key = "condition", value = "value", s1:s6) %>%
select(workerId, condition, value) %>%
ggplot(aes(x = condition, y = value)) +
geom_boxplot(outlier.shape = NA) +
scale_x_discrete() +
geom_hline(aes(yintercept = 30), color = "blue", linetype="dashed", show.legend = FALSE) +
geom_jitter(position = position_jitter(width=.1, height=0)) +
stat_compare_means(comparisons = my_comparisons,
method = "t.test",
aes(label = ..p.signif..),
hide.ns = TRUE,
paired = TRUE) +
theme(axis.text.x  = my_axis(pics),
axis.title.x = element_blank()) +
ggtitle("Selecting value 3 on a scale ranging from 0 to 10")
# Visualize: Specify the comparisons you want
my_comparisons <- list(#c("s1", "s2"),
c("s2", "s3"),
c("s3", "s4"),
#c("s4","s5"),
c("s5", "s6"),
c("s1", "s3"),
#c("s2", "s4"),
c("s3", "s5"),
#c("s4","s6"),
#c("s1", "s4"),
c("s2", "s5"),
c("s3", "s6")#,
#c("s1", "s5"),
#c("s2", "s6"),
#c("s1", "s6")
)
batch_5_1 %>%
filter(num_correct > 3) %>%
gather(key = "condition", value = "value", s1:s6) %>%
select(workerId, condition, value) %>%
ggplot(aes(x = condition, y = value)) +
geom_boxplot(outlier.shape = NA) +
scale_x_discrete() +
scale_y_continuous(breaks = c(0,10,20,30,40,50,60,70,80,90,100)) +
geom_hline(aes(yintercept = 50), color = "blue", linetype="dashed", show.legend = FALSE) +
geom_jitter(position = position_jitter(width=.1, height=0)) +
stat_compare_means(comparisons = my_comparisons,
method = "t.test",
aes(label = ..p.signif..),
hide.ns = TRUE,
paired = TRUE) +
theme(axis.text.x  = my_axis(pics),
axis.title.x = element_blank()) +
ggtitle("Selecting value 5 on a scale ranging from 0 to 10")
# Visualize: Specify the comparisons you want
my_comparisons <- list(#c("s1", "s2"),
c("s2", "s3"),
c("s3", "s4"),
#c("s4","s5"),
c("s5", "s6"),
c("s1", "s3"),
#c("s2", "s4"),
c("s3", "s5"),
#c("s4","s6"),
#c("s1", "s4"),
c("s2", "s5"),
c("s3", "s6")#,
#c("s1", "s5"),
#c("s2", "s6"),
#c("s1", "s6")
)
batch_5_1 %>%
filter(num_correct > 3) %>%
gather(key = "condition", value = "value", s1:s6) %>%
select(workerId, condition, value) %>%
ggplot(aes(x = condition, y = value)) +
geom_boxplot(outlier.shape = NA) +
scale_x_discrete() +
ylim(0,100)) +
?ylim
# Visualize: Specify the comparisons you want
my_comparisons <- list(#c("s1", "s2"),
c("s2", "s3"),
c("s3", "s4"),
#c("s4","s5"),
c("s5", "s6"),
c("s1", "s3"),
#c("s2", "s4"),
c("s3", "s5"),
#c("s4","s6"),
#c("s1", "s4"),
c("s2", "s5"),
c("s3", "s6")#,
#c("s1", "s5"),
#c("s2", "s6"),
#c("s1", "s6")
)
batch_5_1 %>%
filter(num_correct > 3) %>%
gather(key = "condition", value = "value", s1:s6) %>%
select(workerId, condition, value) %>%
ggplot(aes(x = condition, y = value)) +
geom_boxplot(outlier.shape = NA) +
scale_x_discrete() +
ylim(0,100) +
geom_hline(aes(yintercept = 50), color = "blue", linetype="dashed", show.legend = FALSE) +
geom_jitter(position = position_jitter(width=.1, height=0)) +
stat_compare_means(comparisons = my_comparisons,
method = "t.test",
aes(label = ..p.signif..),
hide.ns = TRUE,
paired = TRUE) +
theme(axis.text.x  = my_axis(pics),
axis.title.x = element_blank()) +
ggtitle("Selecting value 5 on a scale ranging from 0 to 10")
# Visualize: Specify the comparisons you want
my_comparisons <- list(#c("s1", "s2"),
c("s2", "s3"),
c("s3", "s4"),
#c("s4","s5"),
c("s5", "s6"),
c("s1", "s3"),
#c("s2", "s4"),
c("s3", "s5"),
#c("s4","s6"),
#c("s1", "s4"),
c("s2", "s5"),
c("s3", "s6")#,
#c("s1", "s5"),
#c("s2", "s6"),
#c("s1", "s6")
)
batch_5_1 %>%
filter(num_correct > 3) %>%
gather(key = "condition", value = "value", s1:s6) %>%
select(workerId, condition, value) %>%
ggplot(aes(x = condition, y = value)) +
geom_boxplot(outlier.shape = NA) +
scale_x_discrete() +
ylim(40,60) +
geom_hline(aes(yintercept = 50), color = "blue", linetype="dashed", show.legend = FALSE) +
geom_jitter(position = position_jitter(width=.1, height=0)) +
stat_compare_means(comparisons = my_comparisons,
method = "t.test",
aes(label = ..p.signif..),
hide.ns = TRUE,
paired = TRUE) +
theme(axis.text.x  = my_axis(pics),
axis.title.x = element_blank()) +
ggtitle("Selecting value 5 on a scale ranging from 0 to 10")
my_comparisons <- list(#c("s1", "s2"),
#c("s2", "s3"),
#c("s3", "s4"),
c("s4","s5"),
#c("s5", "s6"),
#c("s1", "s3"),
#c("s2", "s4"),
c("s3", "s5"),
c("s4","s6")#,
#c("s1", "s4"),
#c("s2", "s5"),
#c("s3", "s6"),
#c("s1", "s5"),
#c("s2", "s6"),
#c("s1", "s6")
)
batch_3_1 %>%
filter(num_correct > 3) %>%
gather(key = "condition", value = "value", s1:s6) %>%
select(workerId, condition, value) %>%
ggplot(aes(x = condition, y = value)) +
geom_boxplot(outlier.shape = NA) +
scale_x_discrete() +
ylim(20,50) +
geom_hline(aes(yintercept = 30), color = "blue", linetype="dashed", show.legend = FALSE) +
geom_jitter(position = position_jitter(width=.1, height=0)) +
stat_compare_means(comparisons = my_comparisons,
method = "t.test",
aes(label = ..p.signif..),
hide.ns = TRUE,
paired = TRUE) +
theme(axis.text.x  = my_axis(pics),
axis.title.x = element_blank()) +
ggtitle("Selecting value 3 on a scale ranging from 0 to 10")
# Visualize: Specify the comparisons you want
my_comparisons <- list(#c("s1", "s2"),
c("s2", "s3"),
c("s3", "s4"),
#c("s4","s5"),
c("s5", "s6"),
c("s1", "s3"),
#c("s2", "s4"),
c("s3", "s5"),
#c("s4","s6"),
#c("s1", "s4"),
c("s2", "s5"),
c("s3", "s6")#,
#c("s1", "s5"),
#c("s2", "s6"),
#c("s1", "s6")
)
batch_5_1 %>%
filter(num_correct > 3) %>%
gather(key = "condition", value = "value", s1:s6) %>%
select(workerId, condition, value) %>%
ggplot(aes(x = condition, y = value)) +
geom_boxplot(outlier.shape = NA) +
scale_x_discrete() +
ylim(40,60) +
geom_hline(aes(yintercept = 50), color = "blue", linetype="dashed", show.legend = FALSE) +
geom_jitter(position = position_jitter(width=.1, height=0)) +
stat_compare_means(comparisons = my_comparisons,
method = "t.test",
aes(label = ..p.signif..),
hide.ns = TRUE,
paired = TRUE) +
theme(axis.text.x  = my_axis(pics),
axis.title.x = element_blank()) +
ggtitle("Selecting value 5 on a scale ranging from 0 to 10")
# Visualize: Specify the comparisons you want
my_comparisons <- list(#c("s1", "s2"),
c("s2", "s3"),
c("s3", "s4"),
#c("s4","s5"),
c("s5", "s6"),
c("s1", "s3"),
#c("s2", "s4"),
c("s3", "s5"),
#c("s4","s6"),
#c("s1", "s4"),
c("s2", "s5"),
c("s3", "s6")#,
#c("s1", "s5"),
#c("s2", "s6"),
#c("s1", "s6")
)
batch_5_1 %>%
filter(num_correct > 3) %>%
gather(key = "condition", value = "value", s1:s6) %>%
select(workerId, condition, value) %>%
ggplot(aes(x = condition, y = value)) +
geom_boxplot(outlier.shape = NA) +
scale_x_discrete() +
ylim(40,70) +
geom_hline(aes(yintercept = 50), color = "blue", linetype="dashed", show.legend = FALSE) +
geom_jitter(position = position_jitter(width=.1, height=0)) +
stat_compare_means(comparisons = my_comparisons,
method = "t.test",
aes(label = ..p.signif..),
hide.ns = TRUE,
paired = TRUE) +
theme(axis.text.x  = my_axis(pics),
axis.title.x = element_blank()) +
ggtitle("Selecting value 5 on a scale ranging from 0 to 10")
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("/Users/jcrouser/Google Drive/Synergistic Activities/MassMutual/2018/MassMutual-DataVis")
#render site.
rmarkdown::render_site()
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("/Users/jcrouser/Google Drive/Synergistic Activities/MassMutual/2018/MassMutual-DataVis")
#render site.
rmarkdown::render_site()
rmarkdown::render_site()
