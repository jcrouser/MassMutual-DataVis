# Split into training and test
train <- df %>%
sample_frac(0.7)
test <- df %>%
setdiff(train)
# Fit svm with linear kernel
library(e1071)
svm_linear = svm(class~., data = train, kernel="linear", cost=10)
plot(svm_linear, train)
table(test$class, predict(svm_linear, test))
table(test$class, predict(svm_linear, test))
table(test$class, predict(svm_linear, test))
# Split into training and test
set.seed(1)
train <- df %>%
sample_frac(0.7)
test <- df %>%
setdiff(train)
# Fit svm with linear kernel
library(e1071)
svm_linear = svm(class~., data = train, kernel="linear", cost=10)
plot(svm_linear, train)
table(train$class, predict(svm_linear, train))
9/70
table(test$class, predict(svm_linear, test))
5/30
# Fit svm with polynomial kernel
svm_poly = svm(class~., data = train, kernel="polynomial", cost=10)
plot(svm_linear, train)
# Fit svm with polynomial kernel
svm_poly = svm(class~., data = train, kernel="polynomial", cost=10)
plot(svm_poly, train)
table(train$class, predict(svm_poly, train))
16/70
table(test$class, predict(svm_poly, test))
13/30
# Fit svm with radial kernel
svm_radial = svm(class~., data = train, kernel="radial", gamma=1, cost=10)
plot(svm_radial, train)
table(train$class, predict(svm_radial, train))
table(train$class, predict(svm_radial, train))
table(test$class, predict(svm_radial, test))
# Fit svm with polynomial kernel
svm_poly = svm(class~., data = train, kernel="polynomial", degree = 2, cost=10)
plot(svm_poly, train)
library(dplyr)
set.seed(1)
x = rnorm(100)
y = 4 * x^2 + 3 + rnorm(100)
# Combine into dataframe
df = data.frame(y,x)
# Randomly assign classes, then shift up/down by 3
df <- df %>%
mutate(class = as.factor(sample(c(1, 2), replace = TRUE, size = nrow(df))),
y = ifelse(class==1, y+3, y-3))
# Look at classes to see separation
library(ggplot2)
ggplot(df) +
geom_point(aes(x = x, y = y, color = class))
knitr::opts_chunk$set(echo = TRUE)
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("/Users/jcrouser/Google Drive/Synergistic Activities/MassMutual/2018/MassMutual-DataVis")
#render site.
rmarkdown::render_site()
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("/Users/jcrouser/Google Drive/Synergistic Activities/MassMutual/2018/MassMutual-DataVis")
#render site.
rmarkdown::render_site()
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("/Users/jcrouser/Google Drive/Synergistic Activities/MassMutual/2018/MassMutual-DataVis")
#render site.
rmarkdown::render_site()
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("/Users/jcrouser/Google Drive/Synergistic Activities/MassMutual/2018/MassMutual-DataVis")
#render site.
rmarkdown::render_site()
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("/Users/jcrouser/Google Drive/Synergistic Activities/MassMutual/2018/MassMutual-DataVis")
#render site.
rmarkdown::render_site()
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("/Users/jcrouser/Google Drive/Synergistic Activities/MassMutual/2018/MassMutual-DataVis")
#render site.
rmarkdown::render_site()
warnings()
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("/Users/jcrouser/Google Drive/Synergistic Activities/MassMutual/2018/MassMutual-DataVis")
#render site.
rmarkdown::render_site()
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("/Users/jcrouser/Google Drive/Synergistic Activities/MassMutual/2018/MassMutual-DataVis")
#render site.
rmarkdown::render_site()
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("/Users/jcrouser/Google Drive/Synergistic Activities/MassMutual/2018/MassMutual-DataVis")
#render site.
rmarkdown::render_site()
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("/Users/jcrouser/Google Drive/Synergistic Activities/MassMutual/2018/MassMutual-DataVis")
#render site.
rmarkdown::render_site()
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("/Users/jcrouser/Google Drive/Synergistic Activities/MassMutual/2018/MassMutual-DataVis")
#render site.
rmarkdown::render_site()
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("/Users/jcrouser/Google Drive/Synergistic Activities/MassMutual/2018/MassMutual-DataVis")
#render site.
rmarkdown::render_site()
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("/Users/jcrouser/Google Drive/Synergistic Activities/MassMutual/2018/MassMutual-DataVis")
#render site.
rmarkdown::render_site()
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(ggplot2)
housing <- read.csv("https://jcrouser.github.io/MassMutual-DataVis/datasets/landdata-states.csv",
header = T)
glimpse(housing)
?ggplot2
?geom_boxplot
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("/Users/jcrouser/Google Drive/Synergistic Activities/MassMutual/2018/MassMutual-DataVis")
#render site.
rmarkdown::render_site()
library(ggplot2)
housing <- read.csv("https://jcrouser.github.io/MassMutual-DataVis/datasets/landdata-states.csv",
header = T)
glimpse(housing)
library(ggplot2)
housing <- read.csv("https://jcrouser.github.io/MassMutual-DataVis/datasets/landdata-states.csv",
header = T)
head(housing)
?glimpse
library(ggplot2)
library(dplyr)
housing <- read.csv("https://jcrouser.github.io/MassMutual-DataVis/datasets/landdata-states.csv",
header = T)
glimpse(housing)
library(ggplot2)
library(dplyr)
housing <- read.csv("https://jcrouser.github.io/MassMutual-DataVis/datasets/landdata-states.csv",
header = T)
glimpse(housing)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(dplyr)
housing <- read.csv("https://jcrouser.github.io/MassMutual-DataVis/datasets/landdata-states.csv",
header = T)
glimpse(housing)
ggplot(housing,
aes(x = Land.Value,
y = Structure.Cost)) +
geom_point()
hp2013Q1 <- housing %>%
filter(Date == 2013.25) %>%
ggplot(aes(x = Land.Value,
y = Structure.Cost)) +
geom_point()
housing %>%
filter(Date == 2013.25) %>%
ggplot(aes(x = Land.Value,
y = Structure.Cost)) +
geom_point()
housing %>%
filter(Date == 2013.25) %>%
ggplot(aes(x = Land.Value)) +
geom_point()
housing %>%
filter(Date == 2013.25) %>%
ggplot(aes(x = Land.Value,
y = Structure.Cost,
color = region)) +
geom_point()
housing %>%
filter(Date == 2013.25) %>%
ggplot(aes(x = Land.Value,
y = Structure.Cost)) +
geom_point() +
geom_smooth(method = "lm")
housing %>%
filter(Date == 2013.25) %>%
ggplot(aes(x = Land.Value,
y = Structure.Cost)) +
geom_point() +
geom_smooth()
housing %>%
filter(Date == 2013.25) %>%
ggplot(aes(x = Land.Value,
y = Structure.Cost)) +
geom_point() +
geom_smooth(se = FALSE)
housing %>%
filter(Date == 2013.25) %>%
ggplot(aes(x = Land.Value,
y = Structure.Cost)) +
geom_point() +
geom_smooth(method = "lm",
se = FALSE)
housing %>%
filter(Date == 2013.25) %>%
ggplot(aes(x = Land.Value,
y = Structure.Cost)) +
geom_text(aes(label = State), size = 3, color = "red")
housing %>%
filter(Date == 2013.25) %>%
ggplot(aes(x = Land.Value,
y = Structure.Cost),
color = "red") +
geom_text(aes(label = State), size = 3) +
geom_smooth()
housing %>%
filter(Date == 2013.25) %>%
ggplot(aes(x = Land.Value,
y = Structure.Cost)) +
geom_text(aes(label = State), size = 3)
housing %>%
filter(Date == 2013.25) %>%
ggplot(aes(x = Land.Value,
y = Structure.Cost)) +
geom_point(size = 3)
housing %>%
filter(Date == 2013.25) %>%
ggplot(aes(x = Land.Value,
y = Structure.Cost)) +
geom_point(alpha = 0.2)
housing %>%
filter(Date == 2013.25) %>%
ggplot(aes(x = Land.Value,
y = Structure.Cost)) +
geom_point(alpha = 0.2, size = 1)
housing %>%
filter(Date == 2013.25) %>%
ggplot(aes(x = Land.Value,
y = Structure.Cost)) +
geom_point(aes(alpha = 0.2, size = 1))
housing %>%
filter(Date == 2013.25) %>%
ggplot(aes(x = Land.Value,
y = Structure.Cost)) +
geom_point(aes(color = Home.Value,
Shape = region))
housing %>%
filter(Date == 2013.25) %>%
ggplot(aes(x = Land.Value,
y = Structure.Cost)) +
geom_point(aes(color = Home.Value,
shape = region))
ggplot(housing,
aes(x = State,
y = Home.Price.Index)) +
geom_point()
ggplot(housing,
aes(x = State,
y = Home.Price.Index)) +
geom_point(aes(color = Date),
alpha = 0.5,
size = 1,
position = position_jitter(width = 0.25,
height = 0))
housing %>%
filter(region = "West") %>%
ggplot(aes(x = State,
y = Home.Price.Index)) +
geom_point(aes(color = Date),
alpha = 0.5,
size = 1,
position = position_jitter(width = 0.25,
height = 0))
View(housing)
View(housing)
housing %>%
filter(region == "West") %>%
ggplot(aes(x = State,
y = Home.Price.Index)) +
geom_point(aes(color = Date),
alpha = 0.5,
size = 1,
position = position_jitter(width = 0.25,
height = 0))
housing %>%
filter(region == "West") %>%
ggplot(aes(x = State,
y = Home.Price.Index)) +
geom_point(aes(color = Date),
alpha = 0.5,
size = 1,
position = position_jitter(width = 0.25,
height = 0)) +
ylab("Home Price Index")
housing %>%
filter(region == "West") %>%
ggplot(aes(x = State,
y = Home.Price.Index)) +
geom_point(aes(color = Date),
alpha = 0.5,
size = 1,
position = position_jitter(width = 0.25,
height = 0)) +
ylab("Home Price Index") +
scale_color_continuous(name = "",
breaks = c(1975.25,
1994.25,
2013.25),
labels = c(1975,
1994,
2013))
housing %>%
filter(region == "West") %>%
ggplot(aes(x = State,
y = Home.Price.Index)) +
geom_point(aes(color = Date),
alpha = 0.5,
size = 1,
position = position_jitter(width = 0.25,
height = 0)) +
ylab("Home Price Index") +
scale_color_continuous(name = "",
breaks = c(1975.25,
1994.25,
2013.25),
labels = c(1975,
1994,
2013),
low = "blue",
high = "red")
housing %>%
filter(region == "West") %>%
ggplot(aes(x = State,
y = Home.Price.Index)) +
geom_point(aes(color = Date),
alpha = 0.5,
size = 1,
position = position_jitter(width = 0.25,
height = 0)) +
ylab("Home Price Index") +
scale_color_continuous(name = "",
breaks = c(1975.25,
1994.25,
2013.25),
labels = c(1975,
1994,
2013),
low = "blue",
high = "green")
housing %>%
filter(region == "West") %>%
ggplot(aes(x = State,
y = Home.Price.Index)) +
geom_point(aes(color = Date),
alpha = 0.5,
size = 1,
position = position_jitter(width = 0.25,
height = 0)) +
ylab("Home Price Index") +
scale_color_continuous(name = "",
breaks = c(1975.25,
1994.25,
2013.25),
labels = c(1975,
1994,
2013),
low = "blue",
high = "green",
mid = "gray60",)
housing %>%
filter(region == "West") %>%
ggplot(aes(x = State,
y = Home.Price.Index)) +
geom_point(aes(color = Date),
alpha = 0.5,
size = 1,
position = position_jitter(width = 0.25,
height = 0)) +
ylab("Home Price Index") +
scale_color_continuous(name = "",
breaks = c(1975.25,
1994.25,
2013.25),
labels = c(1975,
1994,
2013),
low = "blue",
high = "green",
mid = "gray60")
housing %>%
filter(region == "West") %>%
ggplot(aes(x = State,
y = Home.Price.Index)) +
geom_point(aes(color = Date),
alpha = 0.5,
size = 1,
position = position_jitter(width = 0.25,
height = 0)) +
ylab("Home Price Index") +
scale_color_gradient2(name = "",
breaks = c(1975.25,
1994.25,
2013.25),
labels = c(1975,
1994,
2013),
low = "blue",
high = "green",
mid = "gray60")
housing %>%
filter(region == "West") %>%
ggplot(aes(x = State,
y = Home.Price.Index)) +
geom_point(aes(color = Date),
alpha = 0.5,
size = 1,
position = position_jitter(width = 0.25,
height = 0)) +
ylab("Home Price Index") +
scale_color_gradient2(name = "",
breaks = c(1975.25,
1994.25,
2013.25),
labels = c(1975,
1994,
2013),
low = "blue",
high = "green",
mid = "gray60",
midpoint = 1994.25)
ggplot(housing, aes(x = Date,
y = Home.Value)) +
geom_line(aes(color = State))
housing %>%
filter(region == "West") %>%
ggplot(aes(x = Date,
y = Home.Value)) +
geom_line(aes(color = State))
housing %>%
filter(region == "West") %>%
ggplot(aes(x = Date,
y = Home.Value)) +
geom_line() +
facet_wrap(~State, ncol = 10)
#housing %>%
#  filter(region == "West") %>%
ggplot(housing, aes(x = Date,
y = Home.Value)) +
geom_line() +
facet_wrap(~State, ncol = 10)
housing_byyear <- aggregate(cbind(Home.Value, Land.Value) ~ Date, data = housing, mean)
housing_byyear <- aggregate(cbind(Home.Value, Land.Value) ~ Date, data = housing, mean)
ggplot(housing_byyear, aes(x = Date)) +
geom_line(aes(y = Home.Value), color = "red") +
geom_line(aes(y = Land.Value), color = "blue")
library(tidyr)
home_land_byyear <- gather(housing_byyear,
value = "value",
key ="type",
Home.Value,
Land.Value)
View(housing_byyear)
View(home_land_byyear)
library(tidyr)
home_land_byyear <- gather(housing_byyear,
value = "value",
key ="type",
Home.Value,
Land.Value)
ggplot(home_land_byyear,
aes(x = Date,
y = value,
color = type)) +
geom_line()
